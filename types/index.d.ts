export default class DatePicker {
    static get defaultProps(): {
        allowSameDay: boolean;
        dateFormat: string;
        dateFormatCalendar: string;
        onChange(): void;
        disabled: boolean;
        disabledKeyboardNavigation: boolean;
        dropdownMode: string;
        onFocus(): void;
        onBlur(): void;
        onKeyDown(): void;
        onInputClick(): void;
        onSelect(): void;
        onClickOutside(): void;
        onMonthChange(): void;
        onCalendarOpen(): void;
        onCalendarClose(): void;
        preventOpenOnFocus: boolean;
        onYearChange(): void;
        onInputError(): void;
        monthsShown: number;
        readOnly: boolean;
        withPortal: boolean;
        shouldCloseOnSelect: boolean;
        showTimeSelect: boolean;
        showTimeInput: boolean;
        showPreviousMonths: boolean;
        showMonthYearPicker: boolean;
        showFullMonthYearPicker: boolean;
        showTwoColumnMonthYearPicker: boolean;
        showFourColumnMonthYearPicker: boolean;
        showYearPicker: boolean;
        showQuarterYearPicker: boolean;
        strictParsing: boolean;
        timeIntervals: number;
        timeCaption: string;
        previousMonthButtonLabel: string;
        nextMonthButtonLabel: string;
        previousYearButtonLabel: string;
        nextYearButtonLabel: string;
        timeInputLabel: string;
        enableTabLoop: boolean;
        yearItemNumber: number;
        renderDayContents(date: any): any;
        focusSelectedMonth: boolean;
        showPopperArrow: boolean;
        excludeScrollbar: boolean;
        customTimeInput: any;
        calendarStartDay: any;
    };
    static propTypes: {
        adjustDateOnChange: any;
        allowSameDay: any;
        ariaDescribedBy: any;
        ariaInvalid: any;
        ariaLabelClose: any;
        ariaLabelledBy: any;
        ariaRequired: any;
        autoComplete: any;
        autoFocus: any;
        calendarClassName: any;
        calendarContainer: any;
        children: any;
        chooseDayAriaLabelPrefix: any;
        closeOnScroll: any;
        className: any;
        customInput: any;
        customInputRef: any;
        calendarStartDay: any;
        dateFormat: any;
        dateFormatCalendar: any;
        dayClassName: any;
        weekDayClassName: any;
        disabledDayAriaLabelPrefix: any;
        monthClassName: any;
        timeClassName: any;
        disabled: any;
        disabledKeyboardNavigation: any;
        dropdownMode: any;
        endDate: any;
        excludeDates: any;
        filterDate: any;
        fixedHeight: any;
        formatWeekNumber: any;
        highlightDates: any;
        id: any;
        includeDates: any;
        includeTimes: any;
        injectTimes: any;
        inline: any;
        isClearable: any;
        locale: any;
        maxDate: any;
        minDate: any;
        monthsShown: any;
        name: any;
        onBlur: any;
        onChange: any;
        onSelect: any;
        onWeekSelect: any;
        onClickOutside: any;
        onChangeRaw: any;
        onFocus: any;
        onInputClick: any;
        onKeyDown: any;
        onMonthChange: any;
        onYearChange: any;
        onInputError: any;
        open: any;
        onCalendarOpen: any;
        onCalendarClose: any;
        openToDate: any;
        peekNextMonth: any;
        placeholderText: any;
        popperContainer: any;
        popperClassName: any;
        popperModifiers: any;
        popperPlacement: any;
        popperProps: any;
        preventOpenOnFocus: any;
        readOnly: any;
        required: any;
        scrollableYearDropdown: any;
        scrollableMonthYearDropdown: any;
        selected: any;
        selectsEnd: any;
        selectsStart: any;
        selectsRange: any;
        showMonthDropdown: any;
        showPreviousMonths: any;
        showMonthYearDropdown: any;
        showWeekNumbers: any;
        showYearDropdown: any;
        strictParsing: any;
        forceShowMonthNavigation: any;
        showDisabledMonthNavigation: any;
        startDate: any;
        startOpen: any;
        tabIndex: any;
        timeCaption: any;
        title: any;
        todayButton: any;
        useWeekdaysShort: any;
        formatWeekDay: any;
        value: any;
        weekLabel: any;
        withPortal: any;
        portalId: any;
        yearItemNumber: any;
        yearDropdownItemNumber: any;
        shouldCloseOnSelect: any;
        showTimeInput: any;
        showMonthYearPicker: any;
        showFullMonthYearPicker: any;
        showTwoColumnMonthYearPicker: any;
        showFourColumnMonthYearPicker: any;
        showYearPicker: any;
        showQuarterYearPicker: any;
        showTimeSelect: any;
        showTimeSelectOnly: any;
        timeFormat: any;
        timeIntervals: any;
        minTime: any;
        maxTime: any;
        excludeTimes: any;
        filterTime: any;
        useShortMonthInDropdown: any;
        clearButtonTitle: any;
        clearButtonClassName: any;
        previousMonthButtonLabel: any;
        nextMonthButtonLabel: any;
        previousYearButtonLabel: any;
        nextYearButtonLabel: any;
        timeInputLabel: any;
        renderCustomHeader: any;
        renderDayContents: any;
        wrapperClassName: any;
        focusSelectedMonth: any;
        onDayMouseEnter: any;
        onMonthMouseLeave: any;
        showPopperArrow: any;
        excludeScrollbar: any;
        enableTabLoop: any;
        customTimeInput: any;
        weekAriaLabelPrefix: any;
    };
    constructor(props: any);
    state: {
        open: any;
        preventFocus: boolean;
        preSelection: any;
        highlightDates: any;
        focused: boolean;
        shouldFocusDayInline: boolean;
    };
    componentDidMount(): void;
    componentDidUpdate(prevProps: any, prevState: any): void;
    componentWillUnmount(): void;
    getPreSelection: () => any;
    calcInitialState: () => {
        open: any;
        preventFocus: boolean;
        preSelection: any;
        highlightDates: any;
        focused: boolean;
        shouldFocusDayInline: boolean;
    };
    clearPreventFocusTimeout: () => void;
    setFocus: () => void;
    setBlur: () => void;
    setOpen: (open: any, skipSetBlur?: boolean) => void;
    inputOk: () => any;
    isCalendarOpen: () => any;
    handleFocus: (event: any) => void;
    cancelFocusInput: () => void;
    inputFocusTimeout: number;
    deferFocusInput: () => void;
    handleDropdownFocus: () => void;
    handleBlur: (event: any) => void;
    handleCalendarClickOutside: (event: any) => void;
    handleChange: (...allArgs: any[]) => void;
    handleSelect: (date: any, event: any, monthSelectedIn: any) => void;
    preventFocusTimeout: number;
    setSelected: (date: any, event: any, keepInput: any, monthSelectedIn: any) => void;
    setPreSelection: (date: any) => void;
    handleTimeChange: (time: any) => void;
    onInputClick: () => void;
    onInputKeyDown: (event: any) => void;
    onDayKeyDown: (event: any) => void;
    onPopperKeyDown: (event: any) => void;
    onClearClick: (event: any) => void;
    clear: () => void;
    onScroll: (event: any) => void;
    renderCalendar: () => any;
    calendar: any;
    renderDateInput: () => any;
    input: any;
    renderClearButton: () => any;
    render(): any;
}
import { registerLocale } from "./date_utils";
import { setDefaultLocale } from "./date_utils";
import { getDefaultLocale } from "./date_utils";
export { registerLocale, setDefaultLocale, getDefaultLocale };
